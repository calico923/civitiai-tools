# ============================================================================
# CivitAI Downloader v2 - 設定ファイルテンプレート
# ============================================================================
# 使用方法: cp config/app_config.yml.example config/app_config.yml
# その後、必要に応じて設定値を変更してください
# ============================================================================

# ============================================================================
# API設定 - CivitAI APIとの通信設定
# ============================================================================
api:
  # 【必須】CivitAI APIキー
  # 取得方法: https://civitai.com/user/account でAPIキーを生成
  # 注意: このキーは秘密情報です。共有しないでください
  civitai_api_key: "YOUR_API_KEY_HERE"
  
  # APIベースURL（通常は変更不要）
  base_url: "https://civitai.com/api/v1"
  
  # APIリクエストタイムアウト（秒）
  # 大きいファイルの検索時は値を大きくすることを推奨
  timeout: 30
  
  # APIリクエスト失敗時のリトライ回数
  # ネットワーク不安定時は値を大きくすることを推奨
  max_retries: 3
  
  # レート制限（1秒あたりのリクエスト数）
  # CivitAI API制限: 通常1req/s、プレミアム会員はより高い制限
  # 値を小さくするとAPI制限回避率が向上
  rate_limit: 0.5

# ============================================================================
# ダウンロード設定 - ファイルダウンロードの動作制御
# ============================================================================
download:
  # ダウンロード保存先ディレクトリ
  # 相対パス: "./downloads" プロジェクト内
  # 絶対パス: "/path/to/downloads" システム任意の場所
  base_directory: "./downloads"
  
  # 同時ダウンロード数
  # 推奨値: 3-5（帯域幅とCPUに応じて調整）
  # 注意: 値が大きすぎるとAPI制限やメモリ不足の原因となる
  concurrent_downloads: 3
  
  # ダウンロード時のチャンクサイズ（バイト）
  # 8192 (8KB) = 標準、16384 (16KB) = 高速回線向け
  # 4096 (4KB) = 低速回線向け
  chunk_size: 8192
  
  # ダウンロード後のチェックサム検証
  # true: 推奨（ファイル破損検出）、false: 高速化
  verify_checksums: true
  
  # ファイルのタイプ別自動整理
  # true: downloads/Checkpoint/, downloads/LORA/ に分類
  # false: downloads/ 直下にすべて保存
  organize_by_type: true
  
  # ダウンロード再開機能
  # true: 推奨（中断したダウンロードを続行）
  # false: 常に最初から再ダウンロード
  resume_enabled: true
  
  # 既存ファイルのスキップ
  # true: 推奨（同名ファイルがあれば再ダウンロードしない）
  # false: 常に再ダウンロード
  skip_existing: true

# ============================================================================
# セキュリティ設定 - ファイル安全性とアクセス制御
# ============================================================================
security:
  # セキュリティスキャン機能
  # true: 推奨（マルウェア・危険ファイル検出）
  # false: 高速化（セキュリティリスクあり）
  enable_scanning: true
  
  # ダウンロード許可最大ファイルサイズ（バイト）
  # 10737418240 = 10GB（Checkpointモデル対応）
  # 2147483648 = 2GB（LoRAモデル中心の場合）
  max_file_size: 10737418240
  
  # セキュリティスキャンのタイムアウト（秒）
  # 大きなファイルのスキャンは時間がかかる
  scan_timeout: 300
  
  # 危険性のあるファイルダウンロード時の確認プロンプト
  # true: 推奨（ユーザーに確認を求める）
  # false: 自動実行（注意が必要）
  require_confirmation: true
  
  # NSFW（年齢制限）コンテンツの許可
  # false: 推奨（SFWコンテンツのみ）
  # true: NSFWコンテンツも含めてダウンロード
  allow_nsfw: false
  
  # Pickleファイルの許可（重要なセキュリティ設定）
  # false: 推奨（Pickleファイルは任意コード実行リスクあり）
  # true: 注意（SafeTensors推奨、Pickleは危険）
  allow_pickle: false
  
  # チェックサム検証（download設定と重複）
  verify_checksums: true
  
  # 使用するハッシュアルゴリズム
  # SHA256: 標準的、BLAKE3: 高速・新世代
  hash_algorithms:
    - SHA256
    - BLAKE3

# ============================================================================
# データベース設定 - データ永続化とキャッシュ
# ============================================================================
database:
  # データベースURL（通常は変更不要）
  # SQLite: "sqlite:///data/civitai.db" (推奨)
  # PostgreSQL: "postgresql://user:pass@localhost/civitai"
  url: "sqlite:///data/civitai.db"
  
  # データベース接続プールサイズ
  # 大量バルクダウンロード時は値を大きくすることを推奨
  connection_pool_size: 5
  
  # データベース最適化機能
  # true: 推奨（自動インデックス・クリーンアップ）
  # false: 手動管理
  enable_optimization: true

# ============================================================================
# ログ設定 - デバッグとトラブルシューティング
# ============================================================================
logging:
  # ログレベル（重要度の低い順）
  # DEBUG: 開発・詳細デバッグ用
  # INFO: 推奨（通常操作の記録）
  # WARNING: 警告のみ
  # ERROR: エラーのみ
  level: "INFO"
  
  # ログファイルパス
  file: "logs/civitai-downloader.log"
  
  # ログファイル最大サイズ（MB）
  # サイズ超過時は自動ローテーション
  max_size_mb: 100
  
  # ローテーション時の保持ファイル数
  # 5 = 最新5ファイルを保持、古いファイルは自動削除
  backup_count: 5
  
  # ログ出力形式
  # simple: 最小限の情報
  # detailed: 推奨（詳細情報付き）
  # structured: JSON形式（ログ解析ツール向け）
  format: "detailed"

# ============================================================================
# 分析設定 - 使用統計とレポート生成
# ============================================================================
analytics:
  # 使用状況データ収集（プライバシー配慮済み）
  # true: 推奨（パフォーマンス改善に活用）
  # false: データ収集無効
  enable_collection: true
  
  # 分析データ保持期間（日）
  # 90日後に古いデータは自動削除
  retention_days: 90
  
  # レポート出力形式
  # html: Webブラウザで表示可能
  # json: プログラム処理用
  # csv: Excel等のスプレッドシート用
  report_formats: ["html", "json", "csv"]

# ============================================================================
# 検索設定 - モデル検索の動作制御
# ============================================================================
search:
  # デュアル検索戦略（高度な検索アルゴリズム）
  # true: 推奨（精度向上）、false: シンプル検索
  dual_strategy_enabled: true
  
  # 重複結果の自動除去
  # true: 推奨（同一モデルの重複を排除）
  # false: 全結果表示
  deduplication: true
  
  # デフォルトソート順
  # "Highest Rated": 評価順、"Most Downloaded": ダウンロード数順
  # "Newest": 新着順、"Most Liked": いいね数順
  default_sort: "Highest Rated"
  
  # デフォルト期間フィルター
  # "AllTime": 全期間、"Year": 1年、"Month": 1ヶ月、"Week": 1週間
  default_period: "AllTime"
  
  # デフォルト検索対象モデルタイプ
  # 検索時にタイプ指定がない場合のフィルター
  default_types:
    - "Checkpoint"    # 基盤モデル
    - "LORA"         # LoRAモデル
    - "LoCon"        # LoCon（LoRA改良版）

# ============================================================================
# パフォーマンス設定 - システム最適化
# ============================================================================
performance:
  # 最適化モード
  # manual: 手動設定、balanced: バランス重視
  # adaptive: 推奨（システム負荷に応じて自動調整）
  optimization_mode: "adaptive"
  
  # 検索結果キャッシュ機能
  # true: 推奨（同一検索の高速化）
  # false: 常にAPIアクセス（最新データ優先）
  cache_enabled: true
  
  # キャッシュ有効期限（秒）
  # 900 = 15分（検索結果の鮮度とパフォーマンスのバランス）
  cache_ttl: 900
  
  # 最大同時APIリクエスト数
  # concurrent_downloads設定と合わせて調整推奨
  max_concurrent_requests: 3

# 監視設定
monitoring:
  enable_stats: true
  report_interval: "daily"
  alert_threshold:
    error_rate: 0.1
    response_time: 5000
    failure_rate: 0.5

# UI設定
ui:
  interactive_mode: true
  progress_updates: true
  color_output: true
  default_export_format: "json"

# エンタープライズ機能設定
enterprise:
  # セキュリティ
  encryption:
    enabled: false
    level: "standard"  # basic, standard, high
  
  # 信頼性
  circuit_breaker:
    enabled: true
    failure_threshold: 5
    timeout: 60
  
  # 監視
  health_monitoring:
    enabled: true
    check_interval: 30
  
  # プラグイン
  plugins:
    enabled: true
    directory: "./plugins"
    auto_discovery: true

# 機能フラグ
features:
  enable_unofficial: true
  risk_tolerance: "medium"  # low, medium, high
  fallback_enabled: true
  categories_enabled: true
  sortby_enabled: true

# 開発・デバッグ設定
development:
  enabled: false
  debug_mode: false
  mock_api: false
  profile_performance: false