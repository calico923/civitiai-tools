[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "civitai_downloader"
version = "0.1.0"
description = "A multi-platform CLI tool for downloading AI models from CivitAI.com"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "CivitAI Downloader Team"},
]
keywords = ["ai", "machine-learning", "models", "civitai", "downloader", "cli"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "requests>=2.31.0,<3.0.0",
    "click>=8.1.7,<9.0.0",
    "rich>=13.7.0,<15.0.0",
    "aiohttp>=3.9.1,<4.0.0",
    "aiofiles>=23.2.1,<25.0.0",
    "platformdirs>=4.1.0,<5.0.0",
    "Pillow>=10.1.0,<12.0.0",
    "tqdm>=4.66.1,<5.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "pydantic>=2.5.0,<3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3,<9.0.0",
    "pytest-cov>=4.1.0,<6.0.0",
    "pytest-mock>=3.12.0,<4.0.0",
    "pytest-asyncio>=0.21.1,<1.0.0",
    "black>=23.12.0,<25.0.0",
    "flake8>=6.1.0,<8.0.0",
    "mypy>=1.7.1,<2.0.0",
    "types-requests>=2.31.0,<3.0.0",
]
docs = [
    "sphinx>=7.2.6,<9.0.0",
    "sphinx-rtd-theme>=2.0.0,<3.0.0",
]

[project.scripts]
civitai = "civitai_downloader.__main__:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["civitai_downloader*"]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]